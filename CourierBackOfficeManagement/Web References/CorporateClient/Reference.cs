//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CourierBackOfficeManagement.CorporateClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CorporateClientWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CorporateClientWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CorporateClientAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback CorporateClientUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CorporateClientGetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CorporateClientGetByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CorporateClientDeleteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCorporateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoroprateChargeByIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CorporateClientWebService() {
            this.Url = global::CourierBackOfficeManagement.Properties.Settings.Default.CourierBackOfficeManagement_CorporateClient_CorporateClientWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CorporateClientAddCompletedEventHandler CorporateClientAddCompleted;
        
        /// <remarks/>
        public event CorporateClientUpdateCompletedEventHandler CorporateClientUpdateCompleted;
        
        /// <remarks/>
        public event CorporateClientGetAllCompletedEventHandler CorporateClientGetAllCompleted;
        
        /// <remarks/>
        public event CorporateClientGetByIDCompletedEventHandler CorporateClientGetByIDCompleted;
        
        /// <remarks/>
        public event CorporateClientDeleteByIDCompletedEventHandler CorporateClientDeleteByIDCompleted;
        
        /// <remarks/>
        public event GetPageDataCompletedEventHandler GetPageDataCompleted;
        
        /// <remarks/>
        public event SearchCorporateClientCompletedEventHandler SearchCorporateClientCompleted;
        
        /// <remarks/>
        public event GetCoroprateChargeByIDCompletedEventHandler GetCoroprateChargeByIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CorporateClientAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CorporateClientAdd(CorporateClientInfo objCorporateClientInfo, string token) {
            object[] results = this.Invoke("CorporateClientAdd", new object[] {
                        objCorporateClientInfo,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CorporateClientAddAsync(CorporateClientInfo objCorporateClientInfo, string token) {
            this.CorporateClientAddAsync(objCorporateClientInfo, token, null);
        }
        
        /// <remarks/>
        public void CorporateClientAddAsync(CorporateClientInfo objCorporateClientInfo, string token, object userState) {
            if ((this.CorporateClientAddOperationCompleted == null)) {
                this.CorporateClientAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorporateClientAddOperationCompleted);
            }
            this.InvokeAsync("CorporateClientAdd", new object[] {
                        objCorporateClientInfo,
                        token}, this.CorporateClientAddOperationCompleted, userState);
        }
        
        private void OnCorporateClientAddOperationCompleted(object arg) {
            if ((this.CorporateClientAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CorporateClientAddCompleted(this, new CorporateClientAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CorporateClientUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CorporateClientUpdate(CorporateClientInfo objCorporateClientInfo, string token) {
            object[] results = this.Invoke("CorporateClientUpdate", new object[] {
                        objCorporateClientInfo,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CorporateClientUpdateAsync(CorporateClientInfo objCorporateClientInfo, string token) {
            this.CorporateClientUpdateAsync(objCorporateClientInfo, token, null);
        }
        
        /// <remarks/>
        public void CorporateClientUpdateAsync(CorporateClientInfo objCorporateClientInfo, string token, object userState) {
            if ((this.CorporateClientUpdateOperationCompleted == null)) {
                this.CorporateClientUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorporateClientUpdateOperationCompleted);
            }
            this.InvokeAsync("CorporateClientUpdate", new object[] {
                        objCorporateClientInfo,
                        token}, this.CorporateClientUpdateOperationCompleted, userState);
        }
        
        private void OnCorporateClientUpdateOperationCompleted(object arg) {
            if ((this.CorporateClientUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CorporateClientUpdateCompleted(this, new CorporateClientUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CorporateClientGetAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CorporateClientInfo[] CorporateClientGetAll(string token) {
            object[] results = this.Invoke("CorporateClientGetAll", new object[] {
                        token});
            return ((CorporateClientInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void CorporateClientGetAllAsync(string token) {
            this.CorporateClientGetAllAsync(token, null);
        }
        
        /// <remarks/>
        public void CorporateClientGetAllAsync(string token, object userState) {
            if ((this.CorporateClientGetAllOperationCompleted == null)) {
                this.CorporateClientGetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorporateClientGetAllOperationCompleted);
            }
            this.InvokeAsync("CorporateClientGetAll", new object[] {
                        token}, this.CorporateClientGetAllOperationCompleted, userState);
        }
        
        private void OnCorporateClientGetAllOperationCompleted(object arg) {
            if ((this.CorporateClientGetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CorporateClientGetAllCompleted(this, new CorporateClientGetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CorporateClientGetByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CorporateClientInfo CorporateClientGetByID(int CorClientID, string token) {
            object[] results = this.Invoke("CorporateClientGetByID", new object[] {
                        CorClientID,
                        token});
            return ((CorporateClientInfo)(results[0]));
        }
        
        /// <remarks/>
        public void CorporateClientGetByIDAsync(int CorClientID, string token) {
            this.CorporateClientGetByIDAsync(CorClientID, token, null);
        }
        
        /// <remarks/>
        public void CorporateClientGetByIDAsync(int CorClientID, string token, object userState) {
            if ((this.CorporateClientGetByIDOperationCompleted == null)) {
                this.CorporateClientGetByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorporateClientGetByIDOperationCompleted);
            }
            this.InvokeAsync("CorporateClientGetByID", new object[] {
                        CorClientID,
                        token}, this.CorporateClientGetByIDOperationCompleted, userState);
        }
        
        private void OnCorporateClientGetByIDOperationCompleted(object arg) {
            if ((this.CorporateClientGetByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CorporateClientGetByIDCompleted(this, new CorporateClientGetByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CorporateClientDeleteByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CorporateClientDeleteByID(int CorClientID, string DeletedBy, string token) {
            this.Invoke("CorporateClientDeleteByID", new object[] {
                        CorClientID,
                        DeletedBy,
                        token});
        }
        
        /// <remarks/>
        public void CorporateClientDeleteByIDAsync(int CorClientID, string DeletedBy, string token) {
            this.CorporateClientDeleteByIDAsync(CorClientID, DeletedBy, token, null);
        }
        
        /// <remarks/>
        public void CorporateClientDeleteByIDAsync(int CorClientID, string DeletedBy, string token, object userState) {
            if ((this.CorporateClientDeleteByIDOperationCompleted == null)) {
                this.CorporateClientDeleteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCorporateClientDeleteByIDOperationCompleted);
            }
            this.InvokeAsync("CorporateClientDeleteByID", new object[] {
                        CorClientID,
                        DeletedBy,
                        token}, this.CorporateClientDeleteByIDOperationCompleted, userState);
        }
        
        private void OnCorporateClientDeleteByIDOperationCompleted(object arg) {
            if ((this.CorporateClientDeleteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CorporateClientDeleteByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPageData(int current, int pagesize, string token) {
            object[] results = this.Invoke("GetPageData", new object[] {
                        current,
                        pagesize,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageDataAsync(int current, int pagesize, string token) {
            this.GetPageDataAsync(current, pagesize, token, null);
        }
        
        /// <remarks/>
        public void GetPageDataAsync(int current, int pagesize, string token, object userState) {
            if ((this.GetPageDataOperationCompleted == null)) {
                this.GetPageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageDataOperationCompleted);
            }
            this.InvokeAsync("GetPageData", new object[] {
                        current,
                        pagesize,
                        token}, this.GetPageDataOperationCompleted, userState);
        }
        
        private void OnGetPageDataOperationCompleted(object arg) {
            if ((this.GetPageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageDataCompleted(this, new GetPageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCorporateClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SearchCorporateClient(string searchText, string token) {
            object[] results = this.Invoke("SearchCorporateClient", new object[] {
                        searchText,
                        token});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SearchCorporateClientAsync(string searchText, string token) {
            this.SearchCorporateClientAsync(searchText, token, null);
        }
        
        /// <remarks/>
        public void SearchCorporateClientAsync(string searchText, string token, object userState) {
            if ((this.SearchCorporateClientOperationCompleted == null)) {
                this.SearchCorporateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCorporateClientOperationCompleted);
            }
            this.InvokeAsync("SearchCorporateClient", new object[] {
                        searchText,
                        token}, this.SearchCorporateClientOperationCompleted, userState);
        }
        
        private void OnSearchCorporateClientOperationCompleted(object arg) {
            if ((this.SearchCorporateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCorporateClientCompleted(this, new SearchCorporateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCoroprateChargeByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCoroprateChargeByID(int ID, string token) {
            object[] results = this.Invoke("GetCoroprateChargeByID", new object[] {
                        ID,
                        token});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoroprateChargeByIDAsync(int ID, string token) {
            this.GetCoroprateChargeByIDAsync(ID, token, null);
        }
        
        /// <remarks/>
        public void GetCoroprateChargeByIDAsync(int ID, string token, object userState) {
            if ((this.GetCoroprateChargeByIDOperationCompleted == null)) {
                this.GetCoroprateChargeByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoroprateChargeByIDOperationCompleted);
            }
            this.InvokeAsync("GetCoroprateChargeByID", new object[] {
                        ID,
                        token}, this.GetCoroprateChargeByIDOperationCompleted, userState);
        }
        
        private void OnGetCoroprateChargeByIDOperationCompleted(object arg) {
            if ((this.GetCoroprateChargeByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoroprateChargeByIDCompleted(this, new GetCoroprateChargeByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CorporateClientInfo {
        
        private int corporateClientIDField;
        
        private string clientNameField;
        
        private string addressField;
        
        private string phoneNumberField;
        
        private string emailAddressField;
        
        private string hOAddressField;
        
        private string lCDepartmentField;
        
        private string lCDContactPersonField;
        
        private string lCDContactPersonPhoneField;
        
        private string lCDContactPersonMobileField;
        
        private string lCDContactPersonEmailField;
        
        private string sLAField;
        
        private string addedByField;
        
        private System.DateTime addedDateField;
        
        private string editedByField;
        
        private string deletedByField;
        
        private bool isModifiedField;
        
        private bool isDeletedField;
        
        /// <remarks/>
        public int CorporateClientID {
            get {
                return this.corporateClientIDField;
            }
            set {
                this.corporateClientIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string HOAddress {
            get {
                return this.hOAddressField;
            }
            set {
                this.hOAddressField = value;
            }
        }
        
        /// <remarks/>
        public string LCDepartment {
            get {
                return this.lCDepartmentField;
            }
            set {
                this.lCDepartmentField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPerson {
            get {
                return this.lCDContactPersonField;
            }
            set {
                this.lCDContactPersonField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPersonPhone {
            get {
                return this.lCDContactPersonPhoneField;
            }
            set {
                this.lCDContactPersonPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPersonMobile {
            get {
                return this.lCDContactPersonMobileField;
            }
            set {
                this.lCDContactPersonMobileField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPersonEmail {
            get {
                return this.lCDContactPersonEmailField;
            }
            set {
                this.lCDContactPersonEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SLA {
            get {
                return this.sLAField;
            }
            set {
                this.sLAField = value;
            }
        }
        
        /// <remarks/>
        public string AddedBy {
            get {
                return this.addedByField;
            }
            set {
                this.addedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddedDate {
            get {
                return this.addedDateField;
            }
            set {
                this.addedDateField = value;
            }
        }
        
        /// <remarks/>
        public string EditedBy {
            get {
                return this.editedByField;
            }
            set {
                this.editedByField = value;
            }
        }
        
        /// <remarks/>
        public string DeletedBy {
            get {
                return this.deletedByField;
            }
            set {
                this.deletedByField = value;
            }
        }
        
        /// <remarks/>
        public bool IsModified {
            get {
                return this.isModifiedField;
            }
            set {
                this.isModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CorporateClientAddCompletedEventHandler(object sender, CorporateClientAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CorporateClientAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CorporateClientAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CorporateClientUpdateCompletedEventHandler(object sender, CorporateClientUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CorporateClientUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CorporateClientUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CorporateClientGetAllCompletedEventHandler(object sender, CorporateClientGetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CorporateClientGetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CorporateClientGetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CorporateClientInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CorporateClientInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CorporateClientGetByIDCompletedEventHandler(object sender, CorporateClientGetByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CorporateClientGetByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CorporateClientGetByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CorporateClientInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CorporateClientInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CorporateClientDeleteByIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPageDataCompletedEventHandler(object sender, GetPageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SearchCorporateClientCompletedEventHandler(object sender, SearchCorporateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCorporateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCorporateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCoroprateChargeByIDCompletedEventHandler(object sender, GetCoroprateChargeByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoroprateChargeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoroprateChargeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591