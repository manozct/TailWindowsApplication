//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CourierBackOfficeManagement.GeneralCourierPrice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GeneralCourierPriceWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class GeneralCourierPriceWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddGeneralCourierPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralCourierPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralCourierPriceByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourierPriceByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourierPriceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindGeneralCourierLocationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GeneralCourierPriceWebService() {
            this.Url = global::CourierBackOfficeManagement.Properties.Settings.Default.CourierBackOfficeManagement_GeneralCourierPrice_GeneralCourierPriceWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddGeneralCourierPriceCompletedEventHandler AddGeneralCourierPriceCompleted;
        
        /// <remarks/>
        public event UpdateGeneralCourierPriceCompletedEventHandler UpdateGeneralCourierPriceCompleted;
        
        /// <remarks/>
        public event GetGeneralCourierPriceByIDCompletedEventHandler GetGeneralCourierPriceByIDCompleted;
        
        /// <remarks/>
        public event DeleteCourierPriceByIDCompletedEventHandler DeleteCourierPriceByIDCompleted;
        
        /// <remarks/>
        public event GetAllLocationCompletedEventHandler GetAllLocationCompleted;
        
        /// <remarks/>
        public event GetCourierPriceDetailCompletedEventHandler GetCourierPriceDetailCompleted;
        
        /// <remarks/>
        public event GetPageDataCompletedEventHandler GetPageDataCompleted;
        
        /// <remarks/>
        public event BindGeneralCourierLocationCompletedEventHandler BindGeneralCourierLocationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGeneralCourierPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddGeneralCourierPrice(GeneralCourierPriceInfo objInfo, string token) {
            object[] results = this.Invoke("AddGeneralCourierPrice", new object[] {
                        objInfo,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddGeneralCourierPriceAsync(GeneralCourierPriceInfo objInfo, string token) {
            this.AddGeneralCourierPriceAsync(objInfo, token, null);
        }
        
        /// <remarks/>
        public void AddGeneralCourierPriceAsync(GeneralCourierPriceInfo objInfo, string token, object userState) {
            if ((this.AddGeneralCourierPriceOperationCompleted == null)) {
                this.AddGeneralCourierPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGeneralCourierPriceOperationCompleted);
            }
            this.InvokeAsync("AddGeneralCourierPrice", new object[] {
                        objInfo,
                        token}, this.AddGeneralCourierPriceOperationCompleted, userState);
        }
        
        private void OnAddGeneralCourierPriceOperationCompleted(object arg) {
            if ((this.AddGeneralCourierPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGeneralCourierPriceCompleted(this, new AddGeneralCourierPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGeneralCourierPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateGeneralCourierPrice(GeneralCourierPriceInfo objInfo, string token) {
            object[] results = this.Invoke("UpdateGeneralCourierPrice", new object[] {
                        objInfo,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralCourierPriceAsync(GeneralCourierPriceInfo objInfo, string token) {
            this.UpdateGeneralCourierPriceAsync(objInfo, token, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralCourierPriceAsync(GeneralCourierPriceInfo objInfo, string token, object userState) {
            if ((this.UpdateGeneralCourierPriceOperationCompleted == null)) {
                this.UpdateGeneralCourierPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralCourierPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralCourierPrice", new object[] {
                        objInfo,
                        token}, this.UpdateGeneralCourierPriceOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralCourierPriceOperationCompleted(object arg) {
            if ((this.UpdateGeneralCourierPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralCourierPriceCompleted(this, new UpdateGeneralCourierPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralCourierPriceByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeneralCourierPriceInfo GetGeneralCourierPriceByID(int GCPID, string token) {
            object[] results = this.Invoke("GetGeneralCourierPriceByID", new object[] {
                        GCPID,
                        token});
            return ((GeneralCourierPriceInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralCourierPriceByIDAsync(int GCPID, string token) {
            this.GetGeneralCourierPriceByIDAsync(GCPID, token, null);
        }
        
        /// <remarks/>
        public void GetGeneralCourierPriceByIDAsync(int GCPID, string token, object userState) {
            if ((this.GetGeneralCourierPriceByIDOperationCompleted == null)) {
                this.GetGeneralCourierPriceByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralCourierPriceByIDOperationCompleted);
            }
            this.InvokeAsync("GetGeneralCourierPriceByID", new object[] {
                        GCPID,
                        token}, this.GetGeneralCourierPriceByIDOperationCompleted, userState);
        }
        
        private void OnGetGeneralCourierPriceByIDOperationCompleted(object arg) {
            if ((this.GetGeneralCourierPriceByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralCourierPriceByIDCompleted(this, new GetGeneralCourierPriceByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCourierPriceByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCourierPriceByID(int GCPD, string DeletedBy, string token) {
            this.Invoke("DeleteCourierPriceByID", new object[] {
                        GCPD,
                        DeletedBy,
                        token});
        }
        
        /// <remarks/>
        public void DeleteCourierPriceByIDAsync(int GCPD, string DeletedBy, string token) {
            this.DeleteCourierPriceByIDAsync(GCPD, DeletedBy, token, null);
        }
        
        /// <remarks/>
        public void DeleteCourierPriceByIDAsync(int GCPD, string DeletedBy, string token, object userState) {
            if ((this.DeleteCourierPriceByIDOperationCompleted == null)) {
                this.DeleteCourierPriceByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourierPriceByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteCourierPriceByID", new object[] {
                        GCPD,
                        DeletedBy,
                        token}, this.DeleteCourierPriceByIDOperationCompleted, userState);
        }
        
        private void OnDeleteCourierPriceByIDOperationCompleted(object arg) {
            if ((this.DeleteCourierPriceByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourierPriceByIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeneralCourierPriceInfo[] GetAllLocation(string token) {
            object[] results = this.Invoke("GetAllLocation", new object[] {
                        token});
            return ((GeneralCourierPriceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLocationAsync(string token) {
            this.GetAllLocationAsync(token, null);
        }
        
        /// <remarks/>
        public void GetAllLocationAsync(string token, object userState) {
            if ((this.GetAllLocationOperationCompleted == null)) {
                this.GetAllLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLocationOperationCompleted);
            }
            this.InvokeAsync("GetAllLocation", new object[] {
                        token}, this.GetAllLocationOperationCompleted, userState);
        }
        
        private void OnGetAllLocationOperationCompleted(object arg) {
            if ((this.GetAllLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLocationCompleted(this, new GetAllLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourierPriceDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GeneralCourierPriceInfo GetCourierPriceDetail(int fromID, int toID, int serviceTypeID, int packageTypeID, string token) {
            object[] results = this.Invoke("GetCourierPriceDetail", new object[] {
                        fromID,
                        toID,
                        serviceTypeID,
                        packageTypeID,
                        token});
            return ((GeneralCourierPriceInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCourierPriceDetailAsync(int fromID, int toID, int serviceTypeID, int packageTypeID, string token) {
            this.GetCourierPriceDetailAsync(fromID, toID, serviceTypeID, packageTypeID, token, null);
        }
        
        /// <remarks/>
        public void GetCourierPriceDetailAsync(int fromID, int toID, int serviceTypeID, int packageTypeID, string token, object userState) {
            if ((this.GetCourierPriceDetailOperationCompleted == null)) {
                this.GetCourierPriceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourierPriceDetailOperationCompleted);
            }
            this.InvokeAsync("GetCourierPriceDetail", new object[] {
                        fromID,
                        toID,
                        serviceTypeID,
                        packageTypeID,
                        token}, this.GetCourierPriceDetailOperationCompleted, userState);
        }
        
        private void OnGetCourierPriceDetailOperationCompleted(object arg) {
            if ((this.GetCourierPriceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourierPriceDetailCompleted(this, new GetCourierPriceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPageData(int current, int pagesize, string token) {
            object[] results = this.Invoke("GetPageData", new object[] {
                        current,
                        pagesize,
                        token});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageDataAsync(int current, int pagesize, string token) {
            this.GetPageDataAsync(current, pagesize, token, null);
        }
        
        /// <remarks/>
        public void GetPageDataAsync(int current, int pagesize, string token, object userState) {
            if ((this.GetPageDataOperationCompleted == null)) {
                this.GetPageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageDataOperationCompleted);
            }
            this.InvokeAsync("GetPageData", new object[] {
                        current,
                        pagesize,
                        token}, this.GetPageDataOperationCompleted, userState);
        }
        
        private void OnGetPageDataOperationCompleted(object arg) {
            if ((this.GetPageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageDataCompleted(this, new GetPageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindGeneralCourierLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable BindGeneralCourierLocation(int fromID, int toID, string token) {
            object[] results = this.Invoke("BindGeneralCourierLocation", new object[] {
                        fromID,
                        toID,
                        token});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void BindGeneralCourierLocationAsync(int fromID, int toID, string token) {
            this.BindGeneralCourierLocationAsync(fromID, toID, token, null);
        }
        
        /// <remarks/>
        public void BindGeneralCourierLocationAsync(int fromID, int toID, string token, object userState) {
            if ((this.BindGeneralCourierLocationOperationCompleted == null)) {
                this.BindGeneralCourierLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindGeneralCourierLocationOperationCompleted);
            }
            this.InvokeAsync("BindGeneralCourierLocation", new object[] {
                        fromID,
                        toID,
                        token}, this.BindGeneralCourierLocationOperationCompleted, userState);
        }
        
        private void OnBindGeneralCourierLocationOperationCompleted(object arg) {
            if ((this.BindGeneralCourierLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindGeneralCourierLocationCompleted(this, new BindGeneralCourierLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GeneralCourierPriceInfo {
        
        private int generalCourierPriceIDField;
        
        private int fromIDField;
        
        private string locationNameField;
        
        private string fromLocationField;
        
        private string toLocationField;
        
        private int locationIDField;
        
        private int toIDField;
        
        private int serviceTypeIDField;
        
        private string serviceTypeField;
        
        private string packageTypeField;
        
        private int packageTypeIDField;
        
        private decimal pricePerKGField;
        
        private string addedByField;
        
        private System.DateTime addedDateField;
        
        private string editedByField;
        
        private System.DateTime editedDateField;
        
        private string deletedByField;
        
        private System.DateTime deletedDateField;
        
        private bool isModifiedField;
        
        private bool isDeletedField;
        
        /// <remarks/>
        public int GeneralCourierPriceID {
            get {
                return this.generalCourierPriceIDField;
            }
            set {
                this.generalCourierPriceIDField = value;
            }
        }
        
        /// <remarks/>
        public int FromID {
            get {
                return this.fromIDField;
            }
            set {
                this.fromIDField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string FromLocation {
            get {
                return this.fromLocationField;
            }
            set {
                this.fromLocationField = value;
            }
        }
        
        /// <remarks/>
        public string ToLocation {
            get {
                return this.toLocationField;
            }
            set {
                this.toLocationField = value;
            }
        }
        
        /// <remarks/>
        public int LocationID {
            get {
                return this.locationIDField;
            }
            set {
                this.locationIDField = value;
            }
        }
        
        /// <remarks/>
        public int ToID {
            get {
                return this.toIDField;
            }
            set {
                this.toIDField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceTypeID {
            get {
                return this.serviceTypeIDField;
            }
            set {
                this.serviceTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PackageType {
            get {
                return this.packageTypeField;
            }
            set {
                this.packageTypeField = value;
            }
        }
        
        /// <remarks/>
        public int PackageTypeID {
            get {
                return this.packageTypeIDField;
            }
            set {
                this.packageTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal PricePerKG {
            get {
                return this.pricePerKGField;
            }
            set {
                this.pricePerKGField = value;
            }
        }
        
        /// <remarks/>
        public string AddedBy {
            get {
                return this.addedByField;
            }
            set {
                this.addedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddedDate {
            get {
                return this.addedDateField;
            }
            set {
                this.addedDateField = value;
            }
        }
        
        /// <remarks/>
        public string EditedBy {
            get {
                return this.editedByField;
            }
            set {
                this.editedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EditedDate {
            get {
                return this.editedDateField;
            }
            set {
                this.editedDateField = value;
            }
        }
        
        /// <remarks/>
        public string DeletedBy {
            get {
                return this.deletedByField;
            }
            set {
                this.deletedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DeletedDate {
            get {
                return this.deletedDateField;
            }
            set {
                this.deletedDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsModified {
            get {
                return this.isModifiedField;
            }
            set {
                this.isModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddGeneralCourierPriceCompletedEventHandler(object sender, AddGeneralCourierPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGeneralCourierPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGeneralCourierPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateGeneralCourierPriceCompletedEventHandler(object sender, UpdateGeneralCourierPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralCourierPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralCourierPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGeneralCourierPriceByIDCompletedEventHandler(object sender, GetGeneralCourierPriceByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralCourierPriceByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralCourierPriceByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeneralCourierPriceInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeneralCourierPriceInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DeleteCourierPriceByIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAllLocationCompletedEventHandler(object sender, GetAllLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeneralCourierPriceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeneralCourierPriceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCourierPriceDetailCompletedEventHandler(object sender, GetCourierPriceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourierPriceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourierPriceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GeneralCourierPriceInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GeneralCourierPriceInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetPageDataCompletedEventHandler(object sender, GetPageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BindGeneralCourierLocationCompletedEventHandler(object sender, BindGeneralCourierLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindGeneralCourierLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindGeneralCourierLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591