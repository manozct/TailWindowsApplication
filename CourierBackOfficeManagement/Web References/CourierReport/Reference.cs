//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CourierBackOfficeManagement.CourierReport {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CourierReportWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CourierReportWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetClientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaffListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourierReportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterCourierReportListByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterCourierReportListByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchedKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportOnMenuBtnClickOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterCourierReportByStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourierReportByDateIntervalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CourierReportWebService() {
            this.Url = global::CourierBackOfficeManagement.Properties.Settings.Default.CourierBackOfficeManagement_CourierReport_CourierReportWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetClientListCompletedEventHandler GetClientListCompleted;
        
        /// <remarks/>
        public event GetLocationListCompletedEventHandler GetLocationListCompleted;
        
        /// <remarks/>
        public event GetStaffListCompletedEventHandler GetStaffListCompleted;
        
        /// <remarks/>
        public event GetCourierReportListCompletedEventHandler GetCourierReportListCompleted;
        
        /// <remarks/>
        public event FilterCourierReportListByLocationCompletedEventHandler FilterCourierReportListByLocationCompleted;
        
        /// <remarks/>
        public event FilterCourierReportListByClientCompletedEventHandler FilterCourierReportListByClientCompleted;
        
        /// <remarks/>
        public event GetSearchedKeyCompletedEventHandler GetSearchedKeyCompleted;
        
        /// <remarks/>
        public event GetReportOnMenuBtnClickCompletedEventHandler GetReportOnMenuBtnClickCompleted;
        
        /// <remarks/>
        public event FilterCourierReportByStaffCompletedEventHandler FilterCourierReportByStaffCompleted;
        
        /// <remarks/>
        public event GetCourierReportByDateIntervalCompletedEventHandler GetCourierReportByDateIntervalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CorporateClientInfo[] GetClientList(string token) {
            object[] results = this.Invoke("GetClientList", new object[] {
                        token});
            return ((CorporateClientInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientListAsync(string token) {
            this.GetClientListAsync(token, null);
        }
        
        /// <remarks/>
        public void GetClientListAsync(string token, object userState) {
            if ((this.GetClientListOperationCompleted == null)) {
                this.GetClientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientListOperationCompleted);
            }
            this.InvokeAsync("GetClientList", new object[] {
                        token}, this.GetClientListOperationCompleted, userState);
        }
        
        private void OnGetClientListOperationCompleted(object arg) {
            if ((this.GetClientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientListCompleted(this, new GetClientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationInfo[] GetLocationList(string token) {
            object[] results = this.Invoke("GetLocationList", new object[] {
                        token});
            return ((LocationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationListAsync(string token) {
            this.GetLocationListAsync(token, null);
        }
        
        /// <remarks/>
        public void GetLocationListAsync(string token, object userState) {
            if ((this.GetLocationListOperationCompleted == null)) {
                this.GetLocationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationListOperationCompleted);
            }
            this.InvokeAsync("GetLocationList", new object[] {
                        token}, this.GetLocationListOperationCompleted, userState);
        }
        
        private void OnGetLocationListOperationCompleted(object arg) {
            if ((this.GetLocationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationListCompleted(this, new GetLocationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStaffList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] GetStaffList(string token) {
            object[] results = this.Invoke("GetStaffList", new object[] {
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStaffListAsync(string token) {
            this.GetStaffListAsync(token, null);
        }
        
        /// <remarks/>
        public void GetStaffListAsync(string token, object userState) {
            if ((this.GetStaffListOperationCompleted == null)) {
                this.GetStaffListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaffListOperationCompleted);
            }
            this.InvokeAsync("GetStaffList", new object[] {
                        token}, this.GetStaffListOperationCompleted, userState);
        }
        
        private void OnGetStaffListOperationCompleted(object arg) {
            if ((this.GetStaffListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaffListCompleted(this, new GetStaffListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourierReportList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] GetCourierReportList(int Offset, int Limit, int SelectedValue, string token) {
            object[] results = this.Invoke("GetCourierReportList", new object[] {
                        Offset,
                        Limit,
                        SelectedValue,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCourierReportListAsync(int Offset, int Limit, int SelectedValue, string token) {
            this.GetCourierReportListAsync(Offset, Limit, SelectedValue, token, null);
        }
        
        /// <remarks/>
        public void GetCourierReportListAsync(int Offset, int Limit, int SelectedValue, string token, object userState) {
            if ((this.GetCourierReportListOperationCompleted == null)) {
                this.GetCourierReportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourierReportListOperationCompleted);
            }
            this.InvokeAsync("GetCourierReportList", new object[] {
                        Offset,
                        Limit,
                        SelectedValue,
                        token}, this.GetCourierReportListOperationCompleted, userState);
        }
        
        private void OnGetCourierReportListOperationCompleted(object arg) {
            if ((this.GetCourierReportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourierReportListCompleted(this, new GetCourierReportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilterCourierReportListByLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] FilterCourierReportListByLocation(int Offset, int Limit, int DdlCltVal, string DdlLocVal, System.DateTime StrDate, System.DateTime EndDate, string token) {
            object[] results = this.Invoke("FilterCourierReportListByLocation", new object[] {
                        Offset,
                        Limit,
                        DdlCltVal,
                        DdlLocVal,
                        StrDate,
                        EndDate,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterCourierReportListByLocationAsync(int Offset, int Limit, int DdlCltVal, string DdlLocVal, System.DateTime StrDate, System.DateTime EndDate, string token) {
            this.FilterCourierReportListByLocationAsync(Offset, Limit, DdlCltVal, DdlLocVal, StrDate, EndDate, token, null);
        }
        
        /// <remarks/>
        public void FilterCourierReportListByLocationAsync(int Offset, int Limit, int DdlCltVal, string DdlLocVal, System.DateTime StrDate, System.DateTime EndDate, string token, object userState) {
            if ((this.FilterCourierReportListByLocationOperationCompleted == null)) {
                this.FilterCourierReportListByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterCourierReportListByLocationOperationCompleted);
            }
            this.InvokeAsync("FilterCourierReportListByLocation", new object[] {
                        Offset,
                        Limit,
                        DdlCltVal,
                        DdlLocVal,
                        StrDate,
                        EndDate,
                        token}, this.FilterCourierReportListByLocationOperationCompleted, userState);
        }
        
        private void OnFilterCourierReportListByLocationOperationCompleted(object arg) {
            if ((this.FilterCourierReportListByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCourierReportListByLocationCompleted(this, new FilterCourierReportListByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilterCourierReportListByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] FilterCourierReportListByClient(int Offset, int Limit, string selectedValue, System.DateTime StrDate, System.DateTime EndDate, string token) {
            object[] results = this.Invoke("FilterCourierReportListByClient", new object[] {
                        Offset,
                        Limit,
                        selectedValue,
                        StrDate,
                        EndDate,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterCourierReportListByClientAsync(int Offset, int Limit, string selectedValue, System.DateTime StrDate, System.DateTime EndDate, string token) {
            this.FilterCourierReportListByClientAsync(Offset, Limit, selectedValue, StrDate, EndDate, token, null);
        }
        
        /// <remarks/>
        public void FilterCourierReportListByClientAsync(int Offset, int Limit, string selectedValue, System.DateTime StrDate, System.DateTime EndDate, string token, object userState) {
            if ((this.FilterCourierReportListByClientOperationCompleted == null)) {
                this.FilterCourierReportListByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterCourierReportListByClientOperationCompleted);
            }
            this.InvokeAsync("FilterCourierReportListByClient", new object[] {
                        Offset,
                        Limit,
                        selectedValue,
                        StrDate,
                        EndDate,
                        token}, this.FilterCourierReportListByClientOperationCompleted, userState);
        }
        
        private void OnFilterCourierReportListByClientOperationCompleted(object arg) {
            if ((this.FilterCourierReportListByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCourierReportListByClientCompleted(this, new FilterCourierReportListByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchedKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] GetSearchedKey(string SearchedKey, int Offset, int Limit, System.DateTime StrDate, System.DateTime EndDate, string token) {
            object[] results = this.Invoke("GetSearchedKey", new object[] {
                        SearchedKey,
                        Offset,
                        Limit,
                        StrDate,
                        EndDate,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchedKeyAsync(string SearchedKey, int Offset, int Limit, System.DateTime StrDate, System.DateTime EndDate, string token) {
            this.GetSearchedKeyAsync(SearchedKey, Offset, Limit, StrDate, EndDate, token, null);
        }
        
        /// <remarks/>
        public void GetSearchedKeyAsync(string SearchedKey, int Offset, int Limit, System.DateTime StrDate, System.DateTime EndDate, string token, object userState) {
            if ((this.GetSearchedKeyOperationCompleted == null)) {
                this.GetSearchedKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchedKeyOperationCompleted);
            }
            this.InvokeAsync("GetSearchedKey", new object[] {
                        SearchedKey,
                        Offset,
                        Limit,
                        StrDate,
                        EndDate,
                        token}, this.GetSearchedKeyOperationCompleted, userState);
        }
        
        private void OnGetSearchedKeyOperationCompleted(object arg) {
            if ((this.GetSearchedKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchedKeyCompleted(this, new GetSearchedKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportOnMenuBtnClick", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] GetReportOnMenuBtnClick(int Offset, int Limit, int BtnID, string token) {
            object[] results = this.Invoke("GetReportOnMenuBtnClick", new object[] {
                        Offset,
                        Limit,
                        BtnID,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportOnMenuBtnClickAsync(int Offset, int Limit, int BtnID, string token) {
            this.GetReportOnMenuBtnClickAsync(Offset, Limit, BtnID, token, null);
        }
        
        /// <remarks/>
        public void GetReportOnMenuBtnClickAsync(int Offset, int Limit, int BtnID, string token, object userState) {
            if ((this.GetReportOnMenuBtnClickOperationCompleted == null)) {
                this.GetReportOnMenuBtnClickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportOnMenuBtnClickOperationCompleted);
            }
            this.InvokeAsync("GetReportOnMenuBtnClick", new object[] {
                        Offset,
                        Limit,
                        BtnID,
                        token}, this.GetReportOnMenuBtnClickOperationCompleted, userState);
        }
        
        private void OnGetReportOnMenuBtnClickOperationCompleted(object arg) {
            if ((this.GetReportOnMenuBtnClickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportOnMenuBtnClickCompleted(this, new GetReportOnMenuBtnClickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FilterCourierReportByStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] FilterCourierReportByStaff(int Offset, int Limit, string DdlCltVal, string DdlLocVal, string DdlstfVal, System.DateTime StrDate, System.DateTime EndDate, string token) {
            object[] results = this.Invoke("FilterCourierReportByStaff", new object[] {
                        Offset,
                        Limit,
                        DdlCltVal,
                        DdlLocVal,
                        DdlstfVal,
                        StrDate,
                        EndDate,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterCourierReportByStaffAsync(int Offset, int Limit, string DdlCltVal, string DdlLocVal, string DdlstfVal, System.DateTime StrDate, System.DateTime EndDate, string token) {
            this.FilterCourierReportByStaffAsync(Offset, Limit, DdlCltVal, DdlLocVal, DdlstfVal, StrDate, EndDate, token, null);
        }
        
        /// <remarks/>
        public void FilterCourierReportByStaffAsync(int Offset, int Limit, string DdlCltVal, string DdlLocVal, string DdlstfVal, System.DateTime StrDate, System.DateTime EndDate, string token, object userState) {
            if ((this.FilterCourierReportByStaffOperationCompleted == null)) {
                this.FilterCourierReportByStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterCourierReportByStaffOperationCompleted);
            }
            this.InvokeAsync("FilterCourierReportByStaff", new object[] {
                        Offset,
                        Limit,
                        DdlCltVal,
                        DdlLocVal,
                        DdlstfVal,
                        StrDate,
                        EndDate,
                        token}, this.FilterCourierReportByStaffOperationCompleted, userState);
        }
        
        private void OnFilterCourierReportByStaffOperationCompleted(object arg) {
            if ((this.FilterCourierReportByStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterCourierReportByStaffCompleted(this, new FilterCourierReportByStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourierReportByDateInterval", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CourierReportInfo[] GetCourierReportByDateInterval(int Offset, int Limit, System.DateTime StrDate, System.DateTime EndDate, string token) {
            object[] results = this.Invoke("GetCourierReportByDateInterval", new object[] {
                        Offset,
                        Limit,
                        StrDate,
                        EndDate,
                        token});
            return ((CourierReportInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCourierReportByDateIntervalAsync(int Offset, int Limit, System.DateTime StrDate, System.DateTime EndDate, string token) {
            this.GetCourierReportByDateIntervalAsync(Offset, Limit, StrDate, EndDate, token, null);
        }
        
        /// <remarks/>
        public void GetCourierReportByDateIntervalAsync(int Offset, int Limit, System.DateTime StrDate, System.DateTime EndDate, string token, object userState) {
            if ((this.GetCourierReportByDateIntervalOperationCompleted == null)) {
                this.GetCourierReportByDateIntervalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourierReportByDateIntervalOperationCompleted);
            }
            this.InvokeAsync("GetCourierReportByDateInterval", new object[] {
                        Offset,
                        Limit,
                        StrDate,
                        EndDate,
                        token}, this.GetCourierReportByDateIntervalOperationCompleted, userState);
        }
        
        private void OnGetCourierReportByDateIntervalOperationCompleted(object arg) {
            if ((this.GetCourierReportByDateIntervalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourierReportByDateIntervalCompleted(this, new GetCourierReportByDateIntervalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CorporateClientInfo {
        
        private int corporateClientIDField;
        
        private string clientNameField;
        
        private string addressField;
        
        private string phoneNumberField;
        
        private string emailAddressField;
        
        private string hOAddressField;
        
        private string lCDepartmentField;
        
        private string lCDContactPersonField;
        
        private string lCDContactPersonPhoneField;
        
        private string lCDContactPersonMobileField;
        
        private string lCDContactPersonEmailField;
        
        private string sLAField;
        
        private string addedByField;
        
        private System.DateTime addedDateField;
        
        private string editedByField;
        
        private string deletedByField;
        
        private bool isModifiedField;
        
        private bool isDeletedField;
        
        /// <remarks/>
        public int CorporateClientID {
            get {
                return this.corporateClientIDField;
            }
            set {
                this.corporateClientIDField = value;
            }
        }
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string HOAddress {
            get {
                return this.hOAddressField;
            }
            set {
                this.hOAddressField = value;
            }
        }
        
        /// <remarks/>
        public string LCDepartment {
            get {
                return this.lCDepartmentField;
            }
            set {
                this.lCDepartmentField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPerson {
            get {
                return this.lCDContactPersonField;
            }
            set {
                this.lCDContactPersonField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPersonPhone {
            get {
                return this.lCDContactPersonPhoneField;
            }
            set {
                this.lCDContactPersonPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPersonMobile {
            get {
                return this.lCDContactPersonMobileField;
            }
            set {
                this.lCDContactPersonMobileField = value;
            }
        }
        
        /// <remarks/>
        public string LCDContactPersonEmail {
            get {
                return this.lCDContactPersonEmailField;
            }
            set {
                this.lCDContactPersonEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SLA {
            get {
                return this.sLAField;
            }
            set {
                this.sLAField = value;
            }
        }
        
        /// <remarks/>
        public string AddedBy {
            get {
                return this.addedByField;
            }
            set {
                this.addedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddedDate {
            get {
                return this.addedDateField;
            }
            set {
                this.addedDateField = value;
            }
        }
        
        /// <remarks/>
        public string EditedBy {
            get {
                return this.editedByField;
            }
            set {
                this.editedByField = value;
            }
        }
        
        /// <remarks/>
        public string DeletedBy {
            get {
                return this.deletedByField;
            }
            set {
                this.deletedByField = value;
            }
        }
        
        /// <remarks/>
        public bool IsModified {
            get {
                return this.isModifiedField;
            }
            set {
                this.isModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CourierReportInfo {
        
        private string pickupFromField;
        
        private string dropToField;
        
        private string packageIDField;
        
        private string weightOfPackageField;
        
        private int noOfPackageField;
        
        private decimal courierChargeField;
        
        private string senderField;
        
        private string receiverField;
        
        private string statusField;
        
        private string staffField;
        
        private int rowTotalField;
        
        /// <remarks/>
        public string PickupFrom {
            get {
                return this.pickupFromField;
            }
            set {
                this.pickupFromField = value;
            }
        }
        
        /// <remarks/>
        public string DropTo {
            get {
                return this.dropToField;
            }
            set {
                this.dropToField = value;
            }
        }
        
        /// <remarks/>
        public string PackageID {
            get {
                return this.packageIDField;
            }
            set {
                this.packageIDField = value;
            }
        }
        
        /// <remarks/>
        public string WeightOfPackage {
            get {
                return this.weightOfPackageField;
            }
            set {
                this.weightOfPackageField = value;
            }
        }
        
        /// <remarks/>
        public int NoOfPackage {
            get {
                return this.noOfPackageField;
            }
            set {
                this.noOfPackageField = value;
            }
        }
        
        /// <remarks/>
        public decimal CourierCharge {
            get {
                return this.courierChargeField;
            }
            set {
                this.courierChargeField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Staff {
            get {
                return this.staffField;
            }
            set {
                this.staffField = value;
            }
        }
        
        /// <remarks/>
        public int RowTotal {
            get {
                return this.rowTotalField;
            }
            set {
                this.rowTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LocationInfo {
        
        private int locationIDField;
        
        private int countryIDField;
        
        private int stateIDField;
        
        private string locationNameField;
        
        private string addedByField;
        
        private string editedByField;
        
        private string deletedByField;
        
        private System.DateTime addedDateField;
        
        private System.DateTime editedDateField;
        
        private System.DateTime deletedDateField;
        
        private bool isModifiedField;
        
        private bool isDeletedField;
        
        /// <remarks/>
        public int LocationID {
            get {
                return this.locationIDField;
            }
            set {
                this.locationIDField = value;
            }
        }
        
        /// <remarks/>
        public int CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
        
        /// <remarks/>
        public int StateID {
            get {
                return this.stateIDField;
            }
            set {
                this.stateIDField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string AddedBy {
            get {
                return this.addedByField;
            }
            set {
                this.addedByField = value;
            }
        }
        
        /// <remarks/>
        public string EditedBy {
            get {
                return this.editedByField;
            }
            set {
                this.editedByField = value;
            }
        }
        
        /// <remarks/>
        public string DeletedBy {
            get {
                return this.deletedByField;
            }
            set {
                this.deletedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddedDate {
            get {
                return this.addedDateField;
            }
            set {
                this.addedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EditedDate {
            get {
                return this.editedDateField;
            }
            set {
                this.editedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DeletedDate {
            get {
                return this.deletedDateField;
            }
            set {
                this.deletedDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsModified {
            get {
                return this.isModifiedField;
            }
            set {
                this.isModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetClientListCompletedEventHandler(object sender, GetClientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CorporateClientInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CorporateClientInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetLocationListCompletedEventHandler(object sender, GetLocationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetStaffListCompletedEventHandler(object sender, GetStaffListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaffListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaffListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCourierReportListCompletedEventHandler(object sender, GetCourierReportListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourierReportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourierReportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void FilterCourierReportListByLocationCompletedEventHandler(object sender, FilterCourierReportListByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCourierReportListByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCourierReportListByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void FilterCourierReportListByClientCompletedEventHandler(object sender, FilterCourierReportListByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCourierReportListByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCourierReportListByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSearchedKeyCompletedEventHandler(object sender, GetSearchedKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchedKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchedKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetReportOnMenuBtnClickCompletedEventHandler(object sender, GetReportOnMenuBtnClickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportOnMenuBtnClickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportOnMenuBtnClickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void FilterCourierReportByStaffCompletedEventHandler(object sender, FilterCourierReportByStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterCourierReportByStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterCourierReportByStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCourierReportByDateIntervalCompletedEventHandler(object sender, GetCourierReportByDateIntervalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourierReportByDateIntervalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourierReportByDateIntervalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CourierReportInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CourierReportInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591