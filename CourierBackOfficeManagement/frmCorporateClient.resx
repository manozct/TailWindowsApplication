<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABGdBTUEAALGPC/xhBQAAA6VJREFUSEu1
        lElMU1EUhu/rozKU1lfKlIKwMiDRhESNqAR1YaxKNEETF6jRhMSFLkQSY4gDpIAoSMEIGiYRRK3EjZo4
        LFxoWTuEFAdQaiW0IFXbqgy1v+cWWyqtbNTFn3t73s33zv37n8cA/BeFLf4LBTbl6ek+laWl9TzU6Tz6
        1NT2qpQUdjYpidUmJDCDRsMa5sigVtc+3rjRc0GtNjWpVKxZoQgPPpWW1jK6Ywdc27ZhePVqVGm1rX8C
        GySpdEing7O0FM6SElxUqe4RWAgB807H9u3DVFMTYLfja10dRpYuRXVSUs9csCEurt5CL3Y3NgI2G6Yf
        PYK7shItKpUpBPywqMjjWb8eePkS6OsDzGa4qqsxnJKCmoSEy35wnVpdNZSR4f2s1wP9/YGz0/X1GNDr
        f4SAuae2/fsxdewY0NsLPHniW93nzuGdSoV6jcZInbYOJiZ6v1RUzJ4hTXd2wkm19tjYB6HgRYtYpVbb
        MlZQgIniYuDOHeD2bXhpdZ48iUG5HAORkXAcPuyr8WdcU2SH68gRtMXEPGiLjg7wfgOf1mrZGfLUvmED
        Jo4ehZc6AVdXFxyHDsG2e7dv76uRJmtq8JlqbQqFiUPnBfMUcE+Hs7Px7cAB4Px5oKFhZvXvSRMnTsC+
        aRO//l0/NCy4gjJbnZzMahITWW18PDPExxutixfDtWsXUF4OlJXNiPbfDh7EyMqV6FAq7xFMmBfsj1Ig
        Ump1s2XZMgwKAkZzcuCgzI5v3gz7unUYTE/HyJo1aI+KMnYsWMA65XLWLYrshkw2P7hOkqosOTleK0EH
        6IiZ9Iz0VBRhXrgQA6mpeJ+ZiRF6WYdcfvlqRAS7TtCbbJYXAqaJMnzQ6bw2emQlcXA/6TnpaUQE+iVp
        Frx8Ocb37EGXKPbMC6brl37YuRMOKgeDeccWips1KgrmYPCKFfiYl4dPFMFrotgaFkzXr7Xs3Qs3leaC
        rQTriI6+T57etCYn400QeJym1bllCxyUEqNc3h0CflxYOD1JP4PB70mjBGmPieGREgjMuKe2rCxYMjIC
        YFd+PibopkPHj3tCwI0ajcldWAhXENixZAmH8vD7IsXBVygF3NOxtWtnPP7V8SSN9C1JehUCviBJAv/0
        ubZvxziVP61axaG+MfXLD+YpuCYILWNbt+Jjbi6+00j3xMa+II/FcGB2SalkzUql6U1+/g//7P8JfEMQ
        mFEm635bUOC5pVC8Jqgs7J/3rxW2+PcC+wkG2jQ5nL7ACgAAAABJRU5ErkJggg==
</value>
  </data>
</root>